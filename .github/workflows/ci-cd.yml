name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.js'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - 'render.yaml'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.js'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - 'render.yaml'
      - '.github/workflows/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json
          cache-dependency-path: |
            package-lock.json

      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit --fund=false

      - name: Run tests
        run: |
          npm test -- --maxWorkers=50%
        env:
          NODE_ENV: test

  # Skip Docker build in CI to minimize time; Render will build from repo
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Skip docker build (handled by Render)
        run: echo "Skipping Docker build in CI. Render builds from render.yaml."

  deploy_notes:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Render (manual)
        run: |
          echo "ðŸš€ Backend ready for Render."
          echo "Render will build from render.yaml in repo root."
          echo "1) Create a Web Service on Render"
          echo "2) Connect this repo"
          echo "3) Ensure Docker build is enabled (render.yaml)"
          echo "4) Set env vars: PORT=3000, NODE_ENV=production, MONGODB_URI, JWT_SECRET"
          echo "5) Trigger deploy"

